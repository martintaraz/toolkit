<?xml version="1.0"?>
<project name="toolkit" default="toolkit" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<import file="props.xml"/>
	
	<target name="setup" depends="platform_props">
		<property name="src" value="src"/>
		<property name="lib" value="libraries"/>
		<property name="build_root" value="ant_build"/>
		<property name="package_dir" value="com/trollworks/toolkit"/>
		<property name="toolkit_build" value="${build_root}/toolkit"/>
		<property name="min_jdk" value="1.8"/>
		<property name="primary_version" value="4.10.0"/>
		<property name="toolkit_jar" value="${lib}/toolkit-${primary_version}.jar"/>
		<property name="toolkit_src_jar" value="${lib}/toolkit-${primary_version}-src.jar"/>
		<tstamp>
			<format property="version" pattern="${primary_version}.yyyyMMddHHmmss"/>
		</tstamp>
		<tstamp>
			<format property="year" pattern="yyyy"/>
		</tstamp>
	</target>
		
	<target name="clean" depends="clean_toolkit" description="Clean up after a build">
		<delete dir="${build_root}"/>
	</target>

	<target name="clean_toolkit" depends="setup" description="Clean up after a toolkit build">
		<delete dir="${toolkit_build}"/>
		<delete>
			<fileset dir="${lib}" includes="toolkit-*.jar"/>
		</delete>
	</target>

	<target name="toolkit" depends="clean_toolkit" description="Build the toolkit">
		<mkdir dir="${toolkit_build}"/>
		
		<!-- Compile the code. -->
		<javac srcdir="${src}" destdir="${toolkit_build}" encoding="UTF-8"
			debug="no" optimize="yes" target="${min_jdk}" source="${min_jdk}" deprecation="true"
			includeantruntime="no" fork="yes">
			<classpath>
				<pathelement location="${lib}/trove-3.0.3.jar"/>
				<pathelement location="../apple_stubs/apple_stubs.jar"/>
			</classpath>
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
		</javac>

		<!-- Copy the images over. -->
		<copy todir="${toolkit_build}">
			<fileset dir="${src}" includes="**/*.png"/>
		</copy>

		<!-- Create the library jar file. -->
		<jar destfile="${toolkit_jar}" basedir="${toolkit_build}" duplicate="fail">
			<manifest>
				<attribute name="bundle-name" value="Trollworks Toolkit"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-copyright-owner" value="Richard A. Wilkes"/>
				<attribute name="bundle-copyright-years" value="1998-${year}"/>
			</manifest>
		</jar>

		<!-- Create the source jar file. -->
		<jar destfile="${toolkit_src_jar}" basedir="${src}" duplicate="fail">
			<manifest>
				<attribute name="bundle-name" value="Trollworks Toolkit Source"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-copyright-owner" value="Richard A. Wilkes"/>
				<attribute name="bundle-copyright-years" value="1998-${year}"/>
			</manifest>
		</jar>
	</target>

	<target name="launcher" depends="setup" description="Compiles a launcher tailored to your app. Note that this must be done on the platform where the app is intended to execute, as platform-specific tasks are required.">
		<fail unless="app.dir" message="You must define 'app.dir'"/>
		<fail unless="app.name" message="You must define 'app.name'"/>
		<fail unless="app.exe" message="You must define 'app.exe'"/>
		<delete file="${app.dir}/${app.exe}"/>
		<fail if:true="${platform.windows}" unless="app.icon.dir" message="You must define 'app.icon.dir'"/>
		<fail if:true="${platform.linux}" unless="app.categories" message="You must define 'app.categories'"/>
		<fail if:true="${platform.linux}" unless="app.keywords" message="You must define 'app.keywords'"/>
		<exec unless:true="${platform.windows}" executable="gcc" dir="launcher" failonerror="yes">
			<arg value="-O2"/>
			<arg value="-Wall"/>
			<arg if:true="${platform.linux}" value="-std=gnu99"/>
			<arg if:true="${platform.mac}" value="-arch"/>
			<arg if:true="${platform.mac}" value="x86_64"/>
			<arg if:true="${platform.mac}" value="-arch"/>
			<arg if:true="${platform.mac}" value="i386"/>
			<arg value="-DAPP_NAME=${app.name}"/>
			<arg if:true="${platform.linux}" value="-DCATEGORIES=${app.categories}"/>
			<arg if:true="${platform.linux}" value="-DKEYWORDS=${app.keywords}"/>
			<arg value="launcher.c"/>
			<arg value="-o"/>
			<arg value="${app.dir}/${app.exe}"/>
		</exec>
		<echo if:true="${platform.windows}" message="1	ICON	&quot;${app.icon.dir}\\app.ico&quot;" file="${app.dir}/app.rc"/>
		<exec if:true="${platform.windows}" executable="rc.exe" failonerror="yes">
			<arg value="/nologo"/>
			<arg value="/Fo${app.dir}/app.res"/>
			<arg value="${app.dir}/app.rc"/>
		</exec>
		<exec if:true="${platform.windows}" executable="cl.exe" dir="launcher" failonerror="yes">
			<arg value="/GA"/>
			<arg value="/O1"/>
			<arg value="/W3"/>
			<arg value="/Gd"/>
			<arg value="/nologo"/>
			<arg value="/DAPP_NAME=${app.name}"/>
			<arg value="/Fe${app.dir}/${app.exe}"/>
			<arg value="/TC"/>
			<arg value="launcher.c"/>
			<arg value="/link"/>
			<arg value="User32.lib"/>
			<arg value="Advapi32.lib"/>
			<arg value="/SUBSYSTEM:WINDOWS"/>
			<arg value="${app.dir}/app.res"/>
			<arg value="/MACHINE:X86"/>
		</exec>
		<delete if:true="${platform.windows}" file="${app.dir}/app.rc"/>
		<delete if:true="${platform.windows}" file="${app.dir}/app.res"/>
	</target>
	
	<target name="jre" depends="setup" description="Unpacks a JRE into the ${support} directory.">
		<fail unless="support" message="You must define 'support'"/>
		<property name="jre.archive.name" value="jre-${jre.version}-${platformWithArch}.tar.gz"/>
		<property name="jre.archive" value="launcher/${jre.archive.name}"/>
		<available file="${jre.archive}" property="jre.available"/>
		<fail unless="jre.available" message="You must provide a copy of the ${platform} JRE in the toolkit launcher directory named '${jre.archive.name}'.\nYou can download this from http://www.oracle.com/technetwork/java/javase/downloads/index.html"/>
		<mkdir dir="${support}"/>
		<untar src="${jre.archive}" dest="${support}" compression="gzip"/>
		<path unless:true="${platform.mac}" id="jredir">
			<dirset dir="${support}">
				<include name="jre*"/>
			</dirset>
		</path>
		<path if:true="${platform.mac}" id="jredir">
			<dirset dir="${support}">
				<include name="jre*/Contents/Home"/>
			</dirset>
		</path>
		<property name="jredir.name" refid="jredir"/>
		<move file="${jredir.name}" tofile="${support}/jre"/>
		<delete if:true="${platform.mac}" dir="${jredir.name}/../.."/>
		<chmod dir="${support}/jre" includes="**/java,**/*.so,**/*.dylib,**/jspawnhelper" perm="+x"/>
	</target>
</project>
